# Generated by Django 2.2.6 on 2019-12-21 02:52

import bookplaylist.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils
import main.models.base
import uuid


def add_numbers_and_default_template(apps, schema_editor):
    Number = apps.get_model('main', 'Number')
    Template = apps.get_model('main', 'Template')
    db_alias = schema_editor.connection.alias
    number_data_list = [
        {
            'number': n,
            'created_at': django.utils.timezone.now(),
            'updated_at': django.utils.timezone.now(),
        }
        for n in range(1, 11)
    ]
    number_obj_list = [Number(**nd) for nd in number_data_list]
    numbers = Number.objects.using(db_alias).bulk_create(number_obj_list)

    default_template = Template.objects.using(db_alias).create(
        name='デフォルト',
        slug='default',
    )
    default_template_numbers = [n for n in numbers if n.number in range(1, 7)]
    default_template.book_numbers.add(*default_template_numbers)


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0028_auto_20191220_2350'),
    ]

    operations = [
        migrations.CreateModel(
            name='Number',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('number', models.PositiveSmallIntegerField(unique=True, verbose_name='number')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='date deleted')),
            ],
            options={
                'verbose_name': 'number',
                'verbose_name_plural': 'numbers',
                'db_table': 'numbers',
                'ordering': ['number'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('book_numbers', models.ManyToManyField(db_table='templates_numbers', related_name='templates', related_query_name='template', to='main.Number', verbose_name='the avarable numbers of books')),
                ('name', bookplaylist.models.fields.NullCharField(max_length=50, verbose_name='template name')),
                ('slug', bookplaylist.models.fields.NullSlugField(unique=True, verbose_name='slug')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='date deleted')),
            ],
            options={
                'verbose_name': 'template',
                'verbose_name_plural': 'templates',
                'db_table': 'templates',
                'ordering': ['created_at'],
                'abstract': False,
            },
        ),
        migrations.AddIndex(
            model_name='number',
            index=models.Index(fields=['created_at'], name='created_at'),
        ),
        migrations.AddIndex(
            model_name='number',
            index=models.Index(fields=['updated_at'], name='updated_at'),
        ),
        migrations.AddIndex(
            model_name='template',
            index=models.Index(fields=['created_at'], name='created_at'),
        ),
        migrations.AddIndex(
            model_name='template',
            index=models.Index(fields=['updated_at'], name='updated_at'),
        ),
        migrations.RunPython(
            add_numbers_and_default_template,
            migrations.RunPython.noop,
        ),
        migrations.AddField(
            model_name='theme',
            name='template',
            field=models.ForeignKey(default=main.models.base.get_or_create_default_template, on_delete=django.db.models.deletion.PROTECT, to='main.Template', verbose_name='template'),
        ),
        migrations.RunSQL(
            "ALTER TABLE `themes` MODIFY `template_id` char(32) NOT NULL AFTER `id`",
            migrations.RunSQL.noop,
        ),
    ]
